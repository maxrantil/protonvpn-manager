# ABOUTME: Pre-commit hooks configuration for VPN manager project
# ABOUTME: Ensures code quality and consistency before commits

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=500']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  # Shell script linting and formatting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        args: ['-e', 'SC1091', '-e', 'SC2034', '-e', 'SC2155']  # Ignore sourcing, unused vars, and declare+assign
        types: [shell]
        exclude: '^\.git/'

  # Bash formatting - disabled due to module issues
  # - repo: https://github.com/lovesegfault/beautysh
  #   rev: v6.2.1
  #   hooks:
  #     - id: beautysh
  #       args: ['--indent-size=4']
  #       types: [shell]

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint
        args: ['--disable', 'MD013', '--disable', 'MD041']  # Disable line length and first line rules

  # File permissions and security checks
  - repo: local
    hooks:
      - id: check-credentials
        name: Check for credentials in files
        entry: bash -c 'if grep -r --include="*.sh" --include="*.bash" --include="*.txt" -i "password.*=" --exclude-dir=tests .; then echo "Potential credentials found!"; exit 1; fi'
        language: system
        pass_filenames: false

      - id: executable-scripts
        name: Ensure scripts are executable
        entry: bash -c 'for script in vpn vpn-manager vpn-connector tests/*.sh; do if [ -f "$script" ] && [ ! -x "$script" ]; then chmod +x "$script"; fi; done'
        language: system
        pass_filenames: false

      # Test execution hooks
      - id: unit-tests
        name: Run unit tests
        entry: bash -c 'cd tests && ./run_tests.sh --unit-only'
        language: system
        pass_filenames: false
        stages: [pre-push]

      - id: integration-tests
        name: Run integration tests
        entry: bash -c 'cd tests && ./run_tests.sh --integration-only'
        language: system
        pass_filenames: false
        stages: [pre-push]

      - id: shell-syntax-check
        name: Shell syntax validation
        entry: bash -c 'for script in vpn vpn-manager vpn-connector tests/*.sh; do if [ -f "$script" ]; then bash -n "$script" || exit 1; fi; done'
        language: system
        pass_filenames: false

      - id: test-framework-validation
        name: Validate test framework
        entry: bash -c 'if [ -f "tests/test_framework.sh" ]; then bash -n tests/test_framework.sh || exit 1; fi'
        language: system
        pass_filenames: false

      - id: config-fixing-tests
        name: VPN Config Fixing Tests
        entry: bash -c 'cd tests && ./config_fixing_tests.sh'
        language: system
        pass_filenames: false
        files: '^(src/fix-ovpn-configs|tests/config_fixing_tests\.sh|locations/.*\.ovpn)$'
